[{"name": "管家开拓者","description": "去action执行『thanos.profileManager.publishStringFact(1,'initConfig',0)』生成配置文件","priority": 1,"condition": "shortcutLaunched&&shortcutValue=='initConfig'","actions": ["import java.nio.file.Files;import java.util.regex.Pattern;fpInit=thanos.profileManager.getLogPath();fpInit=fpInit.substring(0,fpInit.length()-38);if(Files.notExists(java.nio.file.Paths.get(fpInit,'profile_user_io/瘦身保留的进程.conf'))){io.write('瘦身保留的进程.conf','# #开头的都是备注, 会被管家忽略\n# 微信\ncom.tencent.mm\ncom.tencent.mm:push\n');}appinfos=thanos.pkgManager.getInstalledPkgs(1);cgBuilder=new StringBuilder();kaituoConf=java.nio.file.Paths.get(fpInit,'profile_user_io/管家配置.conf');cntKaiTuo=0;time=1;if(Files.exists(kaituoConf)){str=new String(Files.readAllBytes(kaituoConf),java.nio.charset.StandardCharsets.UTF_8);matcher=Pattern.compile('^\\\\s*\\\\[(?<time>\\\\d{13})]',Pattern.MULTILINE).matcher(str);if(matcher.find()){time=Long.parseLong(matcher.group('time'));cgBuilder.append(str.substring(0,matcher.start()));}else{time=0;cgBuilder.append(str);}}else{cgBuilder.append('[时间设置]\n# 用于计算后台时间\n初始时间(秒),变化幅度(秒)=60,15\n\n[API设置]\n# 填thanoxAPI或者suAPI, 推荐thanoxAPI\n# 因为不要求灭霸处于后台, 只有当thanoxAPI失效, 才考虑suAPI\n瘦身API=thanoxAPI\n\n[变量设置]\n# #开头的都是注释, 会被管家忽略\n# 『处理方式 包名 备注 id序列# 档位,计数器 辅助标记』\n# 处理方式: T表示瘦身应用, K表示杀死应用, M则采用内置的逻辑管理音乐类App\n# 包名: 不用改, 自动生成了\n# 备注: 自动生成, 可以改任意内容, 但是不能包含空格\n# id序列: 用于多开应用, 一般本体是0, 分身介于[1,999]之间; 没多开保持默认即可\n# 档位: 用于计算后台时间, 『后台时间 = 初始时间 + 档位 * 变化幅度』, 档位可为负数\n# 计数器: 作用于处理方式T或者M, 如果你设置的K, 则不需要设置该项, 保持0即可『0表示不启用计数器』\n# 辅助标记: 共8个0, 只有前面3个0有意义, 后面的5个不需要管; 简单理解为开关即可\n# 00000000: 第一个0『有通知不处理开关』, 第二个0『有音频不处理开关』, 第三个0『有小窗不处理开关』\n#\n# T com.tencent.mobileqq QQ 0,999# -1,0 11100000\n# 后台『60-1*15=45』秒后, 瘦身『本体和分身999』的QQ; 并关闭计数器, 有通知、有音频、有小窗时, 不进行瘦身\n# T com.tencent.mobileqq QQ 0,999# -1,2 11100000\n# 和上面一样, 就是开启了计数器, 计数器值为2, 表示瘦身2次后清理后台\n# ========分隔符(上面是教程)========\n');}if(time>0){for(appinfo:appinfos){if(++cntKaiTuo==50){Thread.sleep(150);cntKaiTuo=0;}if(appinfo!=null&&appinfo.firstInstallTime>time){cgBuilder.append('# ').append(' ').append(appinfo.pkgName).append(' ');label=appinfo.appLabel;if(label==null||label.isEmpty()){lastIndex=appinfo.pkgName.lastIndexOf('.')+1;label=appinfo.pkgName.substring(lastIndex);}else{label=label.replace(' ', '_');}cgBuilder.append(label).append(' ').append(appinfo.userId).append('# 0,0 00000000\n');}}}cgBuilder.append('\n[').append(System.currentTimeMillis()).append(']\n# !================止步于此, 后果自负================!\n# !!!=====绝对禁区(下面禁止添加和修改任何内容)=====!!!');io.write('管家配置.conf',cgBuilder.toString());"]}]